version: '3.8'

services:
  # Main Cypress runner service
  cypress:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: development
    container_name: cypress-framework
    volumes:
      - ../:/workspace
      - cypress-cache:/home/cypress/.cache/Cypress
      - node-modules:/workspace/node_modules
    environment:
      - CYPRESS_baseUrl=${CYPRESS_BASE_URL:-http://host.docker.internal:3000}
      - CYPRESS_ENV=${ENVIRONMENT:-local}
      - DISPLAY=:99
      - CYPRESS_CACHE_FOLDER=/home/cypress/.cache/Cypress
    networks:
      - cypress-network
    command: npm run cy:open
    ports:
      - "3000:3000"
    depends_on:
      - selenium-hub
    profiles:
      - dev

  # Headless Cypress runner for CI/CD
  cypress-headless:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: cypress-headless
    volumes:
      - cypress-reports:/workspace/cypress/reports
      - cypress-screenshots:/workspace/cypress/screenshots
      - cypress-videos:/workspace/cypress/videos
    environment:
      - CYPRESS_baseUrl=${CYPRESS_BASE_URL:-http://app:3000}
      - CYPRESS_ENV=${ENVIRONMENT:-staging}
      - NO_COLOR=1
    networks:
      - cypress-network
    command: npm run cy:run:headless
    depends_on:
      - app
    profiles:
      - ci

  # Selenium Grid Hub for cross-browser testing
  selenium-hub:
    image: selenium/hub:4.15.0
    container_name: selenium-hub
    ports:
      - "4444:4444"
      - "4442:4442"
      - "4443:4443"
    environment:
      - GRID_MAX_SESSION=16
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300
    networks:
      - cypress-network
    profiles:
      - selenium

  # Chrome node for Selenium Grid
  chrome-node:
    image: selenium/node-chrome:4.15.0
    container_name: chrome-node
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=4
      - NODE_MAX_SESSION=4
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    networks:
      - cypress-network
    profiles:
      - selenium

  # Firefox node for Selenium Grid
  firefox-node:
    image: selenium/node-firefox:4.15.0
    container_name: firefox-node
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=4
      - NODE_MAX_SESSION=4
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    networks:
      - cypress-network
    profiles:
      - selenium

  # Edge node for Selenium Grid
  edge-node:
    image: selenium/node-edge:4.15.0
    container_name: edge-node
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=4
      - NODE_MAX_SESSION=4
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    networks:
      - cypress-network
    profiles:
      - selenium

  # Mock application service for testing
  app:
    image: nginx:alpine
    container_name: test-app
    ports:
      - "3000:80"
    volumes:
      - ../tests/fixtures/mock-app:/usr/share/nginx/html
    networks:
      - cypress-network
    profiles:
      - app

  # PostgreSQL database for integration tests
  postgres:
    image: postgres:15-alpine
    container_name: test-database
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../tests/fixtures/database:/docker-entrypoint-initdb.d
    networks:
      - cypress-network
    profiles:
      - database

  # Redis for session/cache testing
  redis:
    image: redis:7-alpine
    container_name: test-redis
    ports:
      - "6379:6379"
    networks:
      - cypress-network
    profiles:
      - cache

  # Allure report service
  allure:
    image: frankescobar/allure-docker-service
    container_name: allure-reports
    environment:
      - CHECK_RESULTS_EVERY_SECONDS=3
      - KEEP_HISTORY=TRUE
    ports:
      - "5050:5050"
    volumes:
      - cypress-reports:/app/allure-results
      - allure-reports:/app/default-reports
    networks:
      - cypress-network
    profiles:
      - reports

  # Parallel test runner service
  cypress-parallel:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: ci
    volumes:
      - cypress-reports:/workspace/cypress/reports
      - cypress-screenshots:/workspace/cypress/screenshots
      - cypress-videos:/workspace/cypress/videos
    environment:
      - CYPRESS_baseUrl=${CYPRESS_BASE_URL:-http://app:3000}
      - CYPRESS_ENV=${ENVIRONMENT:-staging}
      - CYPRESS_RECORD_KEY=${CYPRESS_RECORD_KEY}
    networks:
      - cypress-network
    command: npm run cy:run:parallel
    depends_on:
      - app
    deploy:
      replicas: 4
    profiles:
      - parallel

  # Performance testing service with k6
  k6:
    image: grafana/k6:latest
    container_name: performance-tests
    volumes:
      - ../tests/performance:/scripts
    environment:
      - K6_OUT=json=/results/performance-results.json
    command: run /scripts/load-test.js
    networks:
      - cypress-network
    profiles:
      - performance

  # Grafana for performance monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-dashboard
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - cypress-network
    profiles:
      - monitoring

  # InfluxDB for metrics storage
  influxdb:
    image: influxdb:2.0
    container_name: influxdb-metrics
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=cypress
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=password
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - cypress-network
    profiles:
      - monitoring

volumes:
  cypress-cache:
    driver: local
  cypress-reports:
    driver: local
  cypress-screenshots:
    driver: local
  cypress-videos:
    driver: local
  allure-reports:
    driver: local
  node-modules:
    driver: local
  postgres-data:
    driver: local
  grafana-data:
    driver: local
  influxdb-data:
    driver: local

networks:
  cypress-network:
    driver: bridge